// This file is part of mathtrader.
//
// Copyright (C) 2021 George Ioannidis
//
// mathtrader is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// mathtrader is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with mathtrader. If not, see <http://www.gnu.org/licenses/>.

// Proto definition for the mathtrade input, i.e., the result of parsing the
// Online Want List Generator (OLWLG) file.

syntax = "proto2";

package mathtrader.common;

import "mathtrader/common/item.proto";
import "mathtrader/common/wantlist.proto";

// Message encapsulating the trade request.
// Next id: 8
message TradeRequest {
  // Encapsulates a wanted item that has been removed from a wantlist.
  // Next id: 4
  message RemovedItem {
    // Id of removed wanted item.
    optional string wanted_item_id = 1;

    // Id of offered item. Identifies the wantlist where the `RemovedItem` was
    // removed from.
    optional string offered_item_id = 2;

    // How many times the item was removed from the wantlist. Expected to be
    // frequency >= 1. If the `wantlist` field is empty, then this refers to
    // the removed instances across all wantlists.
    optional int32 frequency = 3;
  }

  // The wantlists generated by OLWLG.
  repeated common.Wantlist wantlists = 1;

  // All parsed items, including dummies, indexed by Item::id.
  map<string, common.Item> items = 6;

  // Users with trading items.
  repeated string users = 2;

  // The number of items with an official name. This treats copies of individual
  // items as unique items. If no official names have been given, it corresponds
  // to the number of wantlists.
  optional int64 item_count = 3;

  // Tracks duplicate wanted items in wantlists.
  repeated RemovedItem duplicate_items = 4;

  // Tracks the missing items across the entire parser input.
  repeated RemovedItem missing_items = 5;

  // Tracks non-dummy wanted items requested by their owner.
  repeated RemovedItem owned_items = 7;

  extensions 100 to 199;
}
