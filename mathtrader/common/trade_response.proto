// This file is part of mathtrader.
//
// Copyright (C) 2021 George Ioannidis
//
// mathtrader is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// mathtrader is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with mathtrader. If not, see <http://www.gnu.org/licenses/>.

// Proto definition of the mathtrade output, i.e., the item pairs that trade
// with each other.

syntax = "proto2";

package mathtrader.common;

// Encapsulates a successful trade. `offered` item is given away in exchange
// for `wanted` item.
message TradePair {
  optional string offered = 1;
  optional string wanted = 2;
}

// Message encapsulating the results of the math trade.
// Next id: 8
message TradeResponse {
  // All successful trading pairs.
  repeated TradePair trade_pairs = 1;

  // Number of trading users. This number can be computed by processing the
  // `trade_pairs` field, but is explicitly provided for convenience.
  optional int64 trading_users = 7;

  // Statistics on the internal CP model.
  optional string cp_model_stats = 2;

  // Indicates that this solution has been proven to be optimal.
  optional bool is_optimal = 3;

  // Information about the found solution.
  optional string solution_info = 4;

  // User runtime of the solver.
  optional double user_time = 5;

  // Wall runtime of the solver.
  optional double wall_time = 6;
}
